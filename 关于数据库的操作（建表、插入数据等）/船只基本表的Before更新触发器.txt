-- 更新船名
DELIMITER $$

CREATE TRIGGER before_update_BoatName
BEFORE UPDATE ON 船只基本资料表 
FOR EACH ROW
BEGIN
    IF OLD.船名 <> NEW.船名 THEN
        UPDATE 中间检验处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 危险品证书处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 各证书有效期 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 国籍证书处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 坞内检验处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 年度检验处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 检修证明 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 油污证书处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 港澳航线船舶营运证 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 港澳证明处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 特别检验处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 航行港澳船舶证明书 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 航道费纪录表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 船舶共有情况 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 船舶国籍证书 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 船舶所有权登记证书 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 船舶最低安全配员证书 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 船舶电台执照 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 船舶相片 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 船舶载重线证书 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 船舶运载危险品证书 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 船舶防止油污证书 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 营运证处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 螺旋桨尾轴检验处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 货船适航证书 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 载重线证书处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 适航证书处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 配员证书处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
        UPDATE 锅炉检验处理历史表 SET 船名 = NEW.船名 WHERE 序号 = OLD.序号;
    END IF;
END$$

DELIMITER ;


-- 更新船舶种类
DELIMITER $$

CREATE TRIGGER Before_update_ship_type
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    UPDATE 船舶最低安全配员证书
    SET 船舶种类 = NEW.船舶类型
    WHERE 序号 = OLD.序号;
END$$

DELIMITER ;


-- 更新船体材料
DELIMITER //

CREATE TRIGGER before_Trigger_update_boat_material 
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    UPDATE 船舶所有权登记证书
    SET 船体材料 = NEW.船体材料
    WHERE 序号 = NEW.序号;
END;

//
DELIMITER ;



-- 船籍港
DELIMITER //

CREATE TRIGGER before_Trigger_update_port_of_registry 
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    IF NEW.序号 <> OLD.序号 THEN
        UPDATE 船舶所有权登记证书
        SET 船籍港 = NEW.船籍港
        WHERE 序号 = OLD.序号;

        UPDATE 船舶最低安全配员证书
        SET 船籍港 = NEW.船籍港
        WHERE 序号 = OLD.序号;

        UPDATE 航行港澳船舶证明书
        SET 船籍港 = NEW.船籍港
        WHERE 序号 = OLD.序号;
    END IF;
END;

//
DELIMITER ;




-- 建成时间
DELIMITER $$

CREATE TRIGGER before_Trigger_ship_update BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    -- 检查更新的建成时间是否不是未来的日期
    IF NEW.建成时间 <= CURRENT_DATE() THEN
        -- 更新船舶所有权登记证书表的建成日期
        UPDATE 船舶所有权登记证书
        SET 建成日期 = NEW.建成时间
        WHERE 序号 = NEW.序号;

        -- 更新船舶防止油污证书表的建造日期
        UPDATE 船舶防止油污证书
        SET 建造日期 = NEW.建成时间
        WHERE 序号 = NEW.序号;
    ELSE
        -- 如果建成时间不合理，抛出错误
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '建成时间不可以是未来日期';
    END IF;
END$$

DELIMITER ;



-- 总长
DELIMITER //

CREATE TRIGGER update_Trigger_ship_length
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    -- 数据合理性判断，确保总长是在0和1000之间的值
    IF NEW.总长 >= 0 AND NEW.总长 < 1000 THEN
        -- 更新船舶所有权登记证书表中的总长
        UPDATE 船舶所有权登记证书
        SET 总长 = NEW.总长
        WHERE 序号 = NEW.序号; -- 这里把条件改为序号
    ELSE
        -- 如果总长不合理，抛出错误
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '不合理的总长值，必须在0到1000之间';
    END IF;
END;

//
DELIMITER ;


-- 型宽
DELIMITER //

CREATE TRIGGER update_ship_width_before_update
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    -- 检查型宽是否在合理范围内
    IF NEW.型宽 >= 0 AND NEW.型宽 < 1000 THEN
        -- 更新关联表中的型宽
        UPDATE 船舶所有权登记证书
        SET 型宽 = NEW.型宽
        WHERE 序号 = NEW.序号; -- 将条件从船名改为序号
    ELSE
        -- 如果数据不合理，抛出错误
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = '型宽值不合理，必须大于等于0且小于1000';
    END IF;
END;

//
DELIMITER ;



-- 型深
DELIMITER $$

CREATE TRIGGER before_ship_basic_info_update
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    -- 检查更新的型深是否合理
    IF NEW.型深 > 0 AND NEW.型深 < 500 THEN
        -- 更新船舶所有权登记证书表
        UPDATE 船舶所有权登记证书
        SET 型深 = NEW.型深
        WHERE 序号 = NEW.序号;

        -- 更新船舶载重线证书表
        UPDATE 船舶载重线证书
        SET 计算型深 = NEW.型深
        WHERE 序号 = NEW.序号;
    ELSE
        -- 若型深不在合理范围内，则不执行更新并给出错误提示
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '型深必须大于0且小于500';
    END IF;
END$$

DELIMITER ;


-- 总吨
DELIMITER $$

CREATE TRIGGER before_ship_basic_Tons_info_update
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    IF NEW.总吨 > 0 THEN
        UPDATE 船舶所有权登记证书
        SET 总吨 = NEW.总吨
        WHERE 序号 = NEW.序号;
    ELSE
        -- 若总吨不大于0，则不执行更新并给出错误提示
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '总吨必须大于0';
    END IF;
END$$

DELIMITER ;


-- 净吨
DELIMITER $$

CREATE TRIGGER update_net_tonnage_before_update
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    -- 数据合理性判断：净吨应该大于0
    IF NEW.净吨 > 0 THEN
        -- 更新船舶所有权登记证书表中的净吨字段
        UPDATE 船舶所有权登记证书
        SET 净吨 = NEW.净吨
        WHERE 序号 = NEW.序号;
    ELSE
        -- 若净吨不大于0，则不执行更新并给出错误提示
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '净吨必须大于0';
    END IF;
END$$

DELIMITER ;


-- 功率
DELIMITER $$

CREATE TRIGGER before_ship_POWER_update
BEFORE UPDATE ON 船只基本资料表 FOR EACH ROW
BEGIN
    -- 在更新前先判断主机功率是否大于0
    IF NEW.主机功率 > 0 THEN
        -- 更新 船舶所有权登记证书 表中的 功率 字段
        -- 这里我们使用序号来定位需要更新的记录
        UPDATE 船舶所有权登记证书
        SET 功率 = NEW.主机功率
        WHERE 序号 = NEW.序号;
    ELSE
        -- 若主机功率不大于0，则不执行更新并给出错误提示
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '主机功率必须大于0';
    END IF;
END$$

DELIMITER ;



-- 载重吨
DELIMITER //

CREATE TRIGGER before_ship_deadweighttonnage_update
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    IF NEW.载重吨 > 0 THEN
        UPDATE 航行港澳船舶证明书
        SET 载重吨位 = NEW.载重吨
        WHERE 序号 = NEW.序号;
    END IF;
END;

//
DELIMITER ;

-- `航行区域`
DELIMITER $$

CREATE TRIGGER update_sailing_area_before_update
BEFORE UPDATE ON 船只基本资料表
FOR EACH ROW
BEGIN
    UPDATE 货船适航证书
    SET 航区航线 = NEW.航行区域
    WHERE 货船适航证书.序号 = NEW.序号;
END$$

DELIMITER ;


